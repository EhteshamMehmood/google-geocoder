{"name":"Google-geocoder","tagline":"Google Geocoder API v3 for Laravel","body":"Google Geocoder API for Lavarel 4\r\n======================\r\n[![Build Status](https://travis-ci.org/alexpechkarev/google-geocoder.svg?branch=master)](https://travis-ci.org/alexpechkarev/google-geocoder)\r\n\r\nThis package provides simple facility to make [**The Google Geocoding API v3**]\r\n(https://developers.google.com/maps/documentation/geocoding/) calls with [**Laravel 4**](http://laravel.com/).\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nTo install edit `composer.json` and add following line:\r\n\r\n```javascript\r\n\"alexpechkarev/google-geocoder\": \"dev-master\"\r\n```\r\n\r\nRun `composer update`\r\n\r\n\r\nConfiguration\r\n-------------\r\n\r\nOnce installed, register Laravel service provider, in your `app/config/app.php`:\r\n\r\n```php\r\n'providers' => array(\r\n\t...\r\n    'Alexpechkarev\\GoogleGeocoder\\GoogleGeocoderServiceProvider',\r\n)\r\n```\r\n\r\n\r\nPublish configuration file:\r\n\r\n```\r\n$ php artisan config:publish alexpechkarev/google-geocoder --path vendor/alexpechkarev/google-geocoder/src/config/\r\n```\r\n\r\n\r\nUsage\r\n-----\r\n\r\nBefore making calls please ensure you obtain API Key to identify your application and add this key in the configuration file.\r\nMore information on API Key please refer to [**The Google Geocoding API**](https://developers.google.com/maps/documentation/geocoding/#api_key).\r\n\r\n```php\r\n'applicationKey' => 'your-api-key',\r\n```\r\n\r\nCreate an array with key=>value pairs specifying address you would like to geocode:\r\n\r\n```php\r\n$param = array(\"address\"=>\"76 Buckingham Palace Road London SW1W 9TQ\");\r\n```\r\n\r\nUse following command to receive Geocoding response in json format, use xml as fist parameter for XML response.\r\n\r\n```php\r\n$reponse = Geocoder::geocode('json', $param);\r\n```\r\n\r\nTo restrict your results to a specific area use component filter [**Component Filtering**](https://developers.google.com/maps/documentation/geocoding/#ComponentFiltering)\r\nby adding it's filters to parameter array.\r\n\r\n```php\r\n$param = array(\r\n                \"address\"=>\"76 Buckingham Palace Road London SW1W 9TQ\",\r\n                \"componets\"=>\"country:GB\"\r\n            );\r\n```\r\n\r\nGeocoding API supports translation of map coordinates into human-readable address \r\nby reverse geocoding using latitude and longitude parameters. For more details \r\nrefer to [**Reverse Geocoding**](https://developers.google.com/maps/documentation/geocoding/#ReverseGeocoding)\r\nTo make reverse geocoding request use following:\r\n\r\n```php\r\n$param = array(\"latlng\"=>\"40.714224,-73.961452\");\r\n$reponse = Geocoder::geocode('json', $param);\r\n```\r\n\r\nAll requests will return `string` value. For Response example, Status Codes, \r\nError Messages and Results please refer to [**Geocoding Responses**]\r\n(https://developers.google.com/maps/documentation/geocoding/#GeocodingResponses)\r\n\r\n\r\n\r\nSupport\r\n-------\r\n\r\n[Please open an issue on GitHub](https://github.com/alexpechkarev/google-geocoder/issues)\r\n\r\n\r\nLicense\r\n-------\r\n\r\nGoogle Geocoder for Laravel 4 is released under the MIT License. See the bundled\r\n[LICENSE](https://github.com/alexpechkarev/google-geocoder/blob/master/LICENSE)\r\nfile for details.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}